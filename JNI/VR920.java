/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class VR920 {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected VR920(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(VR920 obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ModVR920JNI.delete_VR920(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public VR920() {
    this(ModVR920JNI.new_VR920(), true);
  }

  public void setup() {
    ModVR920JNI.VR920_setup(swigCPtr, this);
  }

  public void shutdown() {
    ModVR920JNI.VR920_shutdown(swigCPtr, this);
  }

  public void update() {
    ModVR920JNI.VR920_update(swigCPtr, this);
  }

  public void beginDraw(float screenWidth, float screenHeight) {
    ModVR920JNI.VR920_beginDraw(swigCPtr, this, screenWidth, screenHeight);
  }

  public void endDraw() {
    ModVR920JNI.VR920_endDraw(swigCPtr, this);
  }

  public boolean shouldUpdate() {
    return ModVR920JNI.VR920_shouldUpdate(swigCPtr, this);
  }

  public void setTracking(boolean enable) {
    ModVR920JNI.VR920_setTracking(swigCPtr, this, enable);
  }

  public void enableTracking() {
    ModVR920JNI.VR920_enableTracking(swigCPtr, this);
  }

  public void disableTracking() {
    ModVR920JNI.VR920_disableTracking(swigCPtr, this);
  }

  public void setStereo(boolean enable) {
    ModVR920JNI.VR920_setStereo(swigCPtr, this, enable);
  }

  public void enableStereo() {
    ModVR920JNI.VR920_enableStereo(swigCPtr, this);
  }

  public void disableStereo() {
    ModVR920JNI.VR920_disableStereo(swigCPtr, this);
  }

  public void setFocalLength(float dist) {
    ModVR920JNI.VR920_setFocalLength(swigCPtr, this, dist);
  }

  public float getFocalLength() {
    return ModVR920JNI.VR920_getFocalLength(swigCPtr, this);
  }

  public void setEyeSeperation(float dist) {
    ModVR920JNI.VR920_setEyeSeperation(swigCPtr, this, dist);
  }

  public float getEyeSeperation() {
    return ModVR920JNI.VR920_getEyeSeperation(swigCPtr, this);
  }

  public void setLeftEye() {
    ModVR920JNI.VR920_setLeftEye(swigCPtr, this);
  }

  public void setRightEye() {
    ModVR920JNI.VR920_setRightEye(swigCPtr, this);
  }

  public void waitLeftEye() {
    ModVR920JNI.VR920_waitLeftEye(swigCPtr, this);
  }

  public void waitRightEye() {
    ModVR920JNI.VR920_waitRightEye(swigCPtr, this);
  }

  public float getPitch() {
    return ModVR920JNI.VR920_getPitch(swigCPtr, this);
  }

  public float getYaw() {
    return ModVR920JNI.VR920_getYaw(swigCPtr, this);
  }

  public float getRoll() {
    return ModVR920JNI.VR920_getRoll(swigCPtr, this);
  }

  public void applyOrientation() {
    ModVR920JNI.VR920_applyOrientation(swigCPtr, this);
  }

}
